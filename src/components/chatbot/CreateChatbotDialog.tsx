'use client'

import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { Button } from '@/components/ui/button'
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select'
import { Textarea } from '@/components/ui/textarea'
import { Plus } from 'lucide-react'
import { toast } from 'react-hot-toast'

interface CreateChatbotDialogProps {
  trigger?: React.ReactNode
}

export function CreateChatbotDialog({ trigger }: CreateChatbotDialogProps) {
  const router = useRouter()
  const [open, setOpen] = useState(false)
  const [isLoading, setIsLoading] = useState(false)
  const [formData, setFormData] = useState({
    name: '',
    language: 'tr',
    aiModel: 'gpt-3.5-turbo',
    botName: 'AI Asistan',
    welcomeMessage: 'Merhaba! Size nasÄ±l yardÄ±mcÄ± olabilirim?',
    placeholderText: 'MesajÄ±nÄ±zÄ± yazÄ±n...',
  })

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsLoading(true)

    try {
      const response = await fetch('/api/chatbot/create', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData),
      })

      const data = await response.json()

      if (!response.ok) {
        toast.error(data.error || 'Bir hata oluÅŸtu')
        setIsLoading(false)
        return
      }

      toast.success('Chatbot baÅŸarÄ±yla oluÅŸturuldu!')
      setOpen(false)
      router.refresh()
      
      // Chatbot detay sayfasÄ±na yÃ¶nlendir
      router.push(`/chatbots/${data.chatbot.id}`)

    } catch (error) {
      toast.error('Bir hata oluÅŸtu')
      setIsLoading(false)
    }
  }

  return (
    <Dialog open={open} onOpenChange={setOpen}>
      <DialogTrigger asChild>
        {trigger || (
          <Button>
            <Plus className="mr-2 h-4 w-4" />
            Yeni Chatbot OluÅŸtur
          </Button>
        )}
      </DialogTrigger>
      <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>Yeni Chatbot OluÅŸtur</DialogTitle>
          <DialogDescription>
            MÃ¼ÅŸteri destek chatbot'unuzu oluÅŸturun ve Ã¶zelleÅŸtirin.
          </DialogDescription>
        </DialogHeader>

        <form onSubmit={handleSubmit} className="space-y-4">
          {/* Chatbot AdÄ± */}
          <div className="space-y-2">
            <Label htmlFor="name">
              Chatbot AdÄ± <span className="text-red-500">*</span>
            </Label>
            <Input
              id="name"
              placeholder="Ã–rn: Destek Botu"
              value={formData.name}
              onChange={(e) => setFormData({ ...formData, name: e.target.value })}
              required
              disabled={isLoading}
            />
          </div>

          {/* Dil */}
          <div className="space-y-2">
            <Label htmlFor="language">Dil</Label>
            <Select
              value={formData.language}
              onValueChange={(value) => setFormData({ ...formData, language: value })}
              disabled={isLoading}
            >
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="tr">ğŸ‡¹ğŸ‡· TÃ¼rkÃ§e</SelectItem>
                <SelectItem value="en">ğŸ‡¬ğŸ‡§ English</SelectItem>
                <SelectItem value="de">ğŸ‡©ğŸ‡ª Deutsch</SelectItem>
                <SelectItem value="fr">ğŸ‡«ğŸ‡· FranÃ§ais</SelectItem>
                <SelectItem value="es">ğŸ‡ªğŸ‡¸ EspaÃ±ol</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* AI Model */}
          <div className="space-y-2">
            <Label htmlFor="aiModel">AI Model</Label>
            <Select
              value={formData.aiModel}
              onValueChange={(value) => setFormData({ ...formData, aiModel: value })}
              disabled={isLoading}
            >
              <SelectTrigger>
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="gpt-3.5-turbo">GPT-3.5 Turbo (HÄ±zlÄ±)</SelectItem>
                <SelectItem value="gpt-4-turbo">GPT-4 Turbo (GeliÅŸmiÅŸ)</SelectItem>
                <SelectItem value="claude-3-sonnet">Claude 3 Sonnet</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Bot AdÄ± */}
          <div className="space-y-2">
            <Label htmlFor="botName">Bot AdÄ±</Label>
            <Input
              id="botName"
              placeholder="Chat widget'ta gÃ¶rÃ¼necek isim"
              value={formData.botName}
              onChange={(e) => setFormData({ ...formData, botName: e.target.value })}
              disabled={isLoading}
            />
          </div>

          {/* HoÅŸ Geldin MesajÄ± */}
          <div className="space-y-2">
            <Label htmlFor="welcomeMessage">HoÅŸ Geldin MesajÄ±</Label>
            <Textarea
              id="welcomeMessage"
              placeholder="KullanÄ±cÄ±larÄ± karÅŸÄ±lama mesajÄ±nÄ±z"
              value={formData.welcomeMessage}
              onChange={(e) => setFormData({ ...formData, welcomeMessage: e.target.value })}
              disabled={isLoading}
              rows={3}
            />
          </div>

          {/* Placeholder Text */}
          <div className="space-y-2">
            <Label htmlFor="placeholderText">Mesaj Placeholder</Label>
            <Input
              id="placeholderText"
              placeholder="Mesaj input'unda gÃ¶rÃ¼necek text"
              value={formData.placeholderText}
              onChange={(e) => setFormData({ ...formData, placeholderText: e.target.value })}
              disabled={isLoading}
            />
          </div>

          <DialogFooter>
            <Button type="button" variant="outline" onClick={() => setOpen(false)} disabled={isLoading}>
              Ä°ptal
            </Button>
            <Button type="submit" disabled={isLoading}>
              {isLoading ? 'OluÅŸturuluyor...' : 'Chatbot OluÅŸtur'}
            </Button>
          </DialogFooter>
        </form>
      </DialogContent>
    </Dialog>
  )
}